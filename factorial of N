Given an integer N, print the factorial of the N (mod ).

Input:
First line contains one integer, T, number of test cases.
Each test case contains one integer, N.

Output:
For each test case you need to print the factorial of N (mod ).

Constraints:


Sample Input
5
1
2
3
4
5
Sample Output
1
2
6
24
120
sol1:
#include<bits/stdc++.h>
using namespace std;
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	long long factorial[100000+1];
	factorial[0] = 1;
	for(int i=1; i<=100000; i++)
	{
		factorial[i] = (i*factorial[i-1])%1000000007;
	}
	
	long long t,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
        cout<<factorial[n]<<"\n";
	}
}
sol2:
#include <bits/stdc++.h>
using namespace std;
 
#define int long long
const int N = 1e5 + 1;
const int MOD = 1e9 + 7;
int fact[N];
void pre() {
    fact[0] = 1;
    fact[1] = 1;
    for(int i = 2; i < N; i++) {
        fact[i] = (fact[i - 1] * i) % MOD;
    }
}
 
void solve() {
    int n;
    cin >> n;
    cout << fact[n] << "\n";
}
 
signed main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    pre();
    int t = 1;
    cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
